생성자
- 객체를 생성할 때 호출되어 객체의 초기화를 담당하는 특별한 메서드이다.
- 객체를 생성하고 초기화하기 위해서는 반드시 생성자를 호출해야 한다.
- 따라서 객체를 생성해야 하는 참조용 클래스는 모두생성자를 가지고 있다.

생성자의 정의
- 생성자는 반환값이 없지만, 반환 타입을 아예 작성하지 않는다.(void로도 적지 않는다.)
- 객체의 필드를 초기화 하기 위한 데이터를 매개변수를 전달받을 수 있다.

접근제한자 클래스명(매개변수1, 매개변수2...){
	생성자명은 무조건 클래스
}

생성자의 호출위치
- 일반 메서드들과는 다르게, 생성자를 호출하는곳이 정해져있다.
- 생성자는 클래스를 기반으로 객체를 생성할 때, 
객체의 초기화를 담당하는 역할을 하므로 *객체를 생성할 때만 호출할 수 있다.*

생성자 호출 방법
- 생성자를 호출할 때는 new 키워드를 함께 사용한다.
클래스명 변수명 = new 클래스명();
------------------------------------------------------------------
상속(inheritance)
- 부모가 자식에게 무언가를 물려주는 것, 자바에서도 부모역할을 하는 클래스가 자식 역할을 하는 클래스에게
멤버변수와 메서드를 물려주는 것을 상속이라고 한다.

- 상속은 클래스를 재활용하기 때문에 중복을 줄여주고 수정을 최소화하는 특징을 가지고 있다.

- 상속해주는 클래스 : 부모클래스, 상위클래스, 기반클래스
- 상속받는 클래스 : 자식클래스, 하위클래스, 파생클래스

- 자바에서 상속을 구현하는 방법은 자식클래스를 선언할 때 extends라는 키워드를 사용해 상속받은 클래스를 명시한다.
- 자식 클래스에서 선택받은 클래스는 부모 클래스 역할을 하게된다.

상속에서의 생성자
- 자식클래스의 객체를 생성할 때, 자식 클래스는 자식의 생성자를 통해
자식 객체를 생성한다.
- 특별한 역할을 하지 않는 기본생성자는 비어있는 것이 맞다.
- 하지만 자식클래스의 기본생성자는 다르다.
- 필드 초기화와 같은 특별한 역할을 하고 있지 않더라도 super()라는 메서드를 가지고 있다.

super() -> 부모클래스의 생성자를 호출할 때 사용하는 키워드
this() -> 같은 클래스의 다른 생성자를 호출할 때 사용하는 키워드
자식클래스로 객체를 생성하기 위해 기본 생성자가 호출되면, super()메서드를 통해 Book(부모클래스)의 기본 생성자를 호출한다.

부모객체를 감싸고 자식객체가 생성된다.
자식객체 안에는 부모객체가 들어있게 된다

오버라이딩(Overriding)
- 부모클래스에서 상속받은 자식 클래스는 부모 클래스의 필드와 메서드를 가져와서 그대로 사용할 수 잇다,
- 하지만 필요하다면, 자식클래스가 상속받은 메서드의 내용을 변경해서 사용할 수 있다.
- 이렇게 상속받은 메서드를 변경해서 다시 구현하는것을 오버라이딩이라고 한다

오버라이딩 규칙
1. 부모클래스의 메서드명, 반환형, 매개변수까지 동일해야 한다.
2. 부모클래스의 메서드보다 접근제한 범위를 줄일수는 있으나 넓힐수는 없다.
3.

@Overriding 어노테이션
- 자바에서 @를 어노테이션이라고 부름
- 주석과 마찬가기로 코드를 실행하는데 직접적인 영향을 미치지는 않는다.
- 자동완성으로 오버라이딩을 구현하면 @Overriding 메서드가 상단에 추가된다
- 생략해도 괜찮지만, 컴파일러에게 오버라이딩된 메서드라고 한번 더 짚어줌으로써
 오타가 났을 때 오류를 발생 시켜 주기 때문에 실수를 줄일수있다
















