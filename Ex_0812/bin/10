강제 예외 처리 방법
- 프로그램을 작성하다보면 코드의 오류로 발생하는 예외도 있지만 
프로그램의 규칙에 위배되어 예외를 발생해야 하는 경우도 있다.

- 만약, 프로그램의 규칙에 위배되어 예외를 발생해야 할 경우, 강제로 예외를 발생시킬 수 있다.

사용자 정의 예외처리
- 개발자의 목적에 의해 예외 객체를 만들 수 있다.
- 자바가 제공하는 예외 객체는 다양하지만 모든 예외를 처리하기는 어렵다.
- 목적에 따라 공통기능을 지니는 예외 처리도 필요하기 때문에 개발자가 직접 예외를 생성하여 처리해야한다.

기본 API 클래스
- 자바에서 제공하는 API프로그램 개발에 자주 사용되는 클래스 및 인터페이스의 모음을 말하며 라이브러리라고도 부른다.

java.lang 패키지
- 자바프로그램의 기본적인 클래스를 담고있는 패키지

Object 자바 클래스의 최상위 클래스
System 시스템의 표준 입력/출력장치로부터 데이터를 입력받거나 출력하기 위해 사용
String 문자열을 저장하고 여러가지 정보를 얻을 때 사용
StringBuffer / StringBuilder 문자열을 저장하고 내부 문자열을 조작할 때 사용
Math 수학 관련 함수를 이용할 때 사용

Object 클래스
- 자바에서 생성되는 모든 클래스는 생성될 때 상속을 하지 않아도
Object를 자동으로 상속받게 되어있다.

- 따라서 클래스를 생성하면 Object가 가지고 있는 여러 메서드를 그대로 사용하거나 오버라이드 하여 사용할 수 있다.
protected Object clone()	객체 자신을 복사한 후 반환
boolean equals(Object obj)  다른 객체와 자신이 가진 실제값을 비교
int hashCode() 				객체의 hashCode 값을 반환(주소값)
String toString()			객체 자신의 정보를 반환

String 클래스
- 문자열을 처리하는 객체형 데이터 타입이다.
- 문자열을 처리하기 위한 다양한 기능들을 가지고 있다.
- String 객체는 한번 생성되면 값을 변경할 수 없다.

int length 문자열의 길이를 반환
char charAt(int index)

StringBuilder / StringBuffer
- String 클래스는 최초 지정된 문자열 이후에 값이 추가되면
새로운 메모리를 할당해 새롭게 문자열을 등록한다.
- 문자열을 많이 사용할수록 메모리 사용이 늘어나 메모리가 낭비될 수 있다.
- 이런 문제를 해결하기 위해 가변 속성을 지닌 StringBuffer 또는 StringBuilder를 사용한다.
- 내부에 여유 공간을 두기 때문에 문자열을 합칠 때 메모리에 새롭게 생성하는 과정을 String보다 현저히 생랼할 수 있다.

append(String str) 				기존 문자열 뒤에 더하여 반환
delete(int start, int end) 		시작 위치부터 끝 위치 전까지 삭제
insert(int offset, String str)	시작 위치부터 문자열을 삽입
reverse()						문자열을 반대로 출력	

Math 클래스
- 수학에서 자주 사용하는 상수들과 함수들을 미리 구현해놓은 클래스로 
자바에서는 수학계산이 필요할 때 주로 사용한다.
- 객체를 선언하지 않고 바로 사용할 수 있도록 해당 클래스가 제공하는 모든 메서드는 
모두 정적메서드로 이루어져있다

Wrapper 클래스
- 프로그램에 따라 기본 타입의 데이터를 객체형으로 표현해야 하는 경우가 있다.
- 이를 위해서 자바에서는 기본 자료형을 객체로 다루기 위한 클래스를 제공한다.
- 이를 Wrapper 클래스 라고 부르는데 기본형의 데이터 타입을 클래스로 포장했기 때문이다

